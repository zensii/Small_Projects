import random
end_game = False
total_tasks = 0
total_correct = 0
total_wrong = 0
total_wrong_tries = 0
add = ''

print('–ó–¥—Ä–∞–≤–µ–π, –∫–æ–π —â–µ –∏–≥—Ä–∞–µ –¥–Ω–µ—Å? ')
print('1: üë¶')
print('2: üëß')

while True:
    try:
        sex = int(input('–ò–∑–±–µ—Ä–∏ –∏–≥—Ä–∞—á: '))
        if sex in (1, 2):
            break
        else:
            print('–¢—Ä—è–±–≤–∞ –¥–∞ –∏–∑–±–µ—Ä–µ—à –∏–≥—Ä–∞—á "1" –∏–ª–∏ –∏–≥—Ä–∞—á "2"')
    except ValueError:
        print('–ò–∑–±–µ—Ä–∏ —Å–∏ –∏–≥—Ä–∞—á –∏ –Ω–∞–ø–∏—à–∏ "1" –∏–ª–∏ "2"')

user = input('–ö–∞–∫ —Å–µ –∫–∞–∑–≤–∞—à?: ')
if sex == 2:
    add = 'a'
print()
print(f'–ó–¥—Ä–∞–≤–µ–π {user.capitalize()}. –ù–µ–∫–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–∞–ª–∏ —Å–∏ –Ω–∞—É—á–∏–ª{add} —Ç–∞–±–ª–∏—Ü–∞—Ç–∞ –∑–∞ —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ. ')
print('–ö–æ–≥–∞—Ç–æ –∏—Å–∫–∞—à –¥–∞ —Å–ø—Ä–µ—à –ø—Ä–æ—Å—Ç–æ –≤—ä–≤–µ–¥–∏ "—Å—Ç–æ–ø".')
print()
print('–ö–∞–≤–æ –∏—Å–∫–∞—à –¥–∞ —Ç—Ä–µ–Ω–∏—Ä–∞—à —Ç–æ–∑–∏ –ø—ä—Ç?')
print('1: –£–º–Ω–æ–∂–µ–Ω–∏–µ. ')
print('2: –î–µ–ª–µ–Ω–∏–µ.')
print('3: –∏ –¥–≤–µ—Ç–µ.')

while True:
    try:
        type_of_game = int(input('–ò–∑–±–∏—Ä–∞–º... '))
        if type_of_game in (1, 2, 3):
            break
        else:
            print('–¢—Ä—è–±–≤–∞ –¥–∞ –∏–∑–±–µ—Ä–µ—à –∫–∞–∫–≤–æ –∏—Å–∫–∞—à –¥–∞ —Ç—Ä–µ–Ω–∏—Ä–∞—à –∏ –¥–∞ –≤—ä–≤–µ–¥–µ—à "1","2" –∏–ª–∏ "3"')
    except ValueError:
        print('–ò–∑–±–µ—Ä–∏ –∏ –Ω–∞–ø–∏—à–∏ "1","2" –∏–ª–∏ "3"')

if type_of_game == 3:
    print(f'–û–æ–æ, —á—É–≤—Å—Ç–≤–∞—à —Å–µ —Å–º–µ–ª{add} –¥–Ω–µ—Å –∞?')

start = input('–ù–∞—Ç–∏—Å–Ω–∏ "Enter" –∑–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—à –∏–≥—Ä–∞—Ç–∞.')

while not end_game:

    next_question = False
    answer = 0
    tries = 0
    a = random.randint(1, 10)
    b = random.randint(1, 10)
    divisors = [a, b]
    if type_of_game == 3:
        operations = ['multiplication', 'division']
        operation = random.choice(operations)
    elif type_of_game == 2:
        operation = 'division'
    elif type_of_game == 1:
        operation = 'multiplication'

    divided = a * b
    divisor = random.choice(divisors)

    if operation == 'division':

        correct = divided // divisor
        print()
        print('--------------------------------------')
        print()
        print(f'–ö–æ–ª–∫–æ –µ {divided} √∑ {divisor} ?')
    else:
        correct = a * b
        print()
        print('--------------------------------------')
        print()
        print(f'–ö–æ–ª–∫–æ –µ {a} * {b} ?')

    while not end_game:
        while tries != 2:
            user_input = input('–ß–∞–∫–∞–º –æ—Ç–≥–æ–≤–æ—Ä–∞ —Ç–∏: ').lower()

            if user_input in ('stop', '—Å—Ç–æ–ø'):
                end_game = True
                print()
                print('**************************************')
                print()
                print(f'–û—Ç–ª–∏—á–∞ —Ä–∞–±–æ—Ç–∞ {user.capitalize()}!. –¢–∏ —Ä–µ—à–∏ {total_tasks} –∑–∞–¥–∞—á–∏.')
                print(f'–û—Ç —Ç—è—Ö —Ä–µ—à–∏ –≤—è—Ä–Ω–æ {total_correct}, –∫–∞—Ç–æ —Ç–∏ –±—è—Ö–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏ {total_wrong_tries + total_correct} –æ–ø–∏—Ç–∞.')
                print(f'–ò–º–∞—à–µ –∏ {total_wrong} –≥—Ä–µ—à–∫–∏.')
                break
            else:
                try:
                    answer = int(user_input)
                    break
                except ValueError:
                    print('–ú–æ–ª—è, –≤—ä–≤–µ–¥–∏ —Ü—è–ª–æ —á–∏—Å–ª–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ "—Å—Ç–æ–ø" –∑–∞ –¥–∞ —Å–ø—Ä–µ—à –∏–≥—Ä–∞—Ç–∞.')

        if not end_game:
            tries += 1
            if answer == correct:
                print()
                print('üòÑ')
                print(f'–ü—Ä–∞–≤–∏–ª–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä. –ë—Ä–∞–≤–æ! {user.capitalize()}!')
                total_correct += 1
                total_tasks += 1
                break
            elif tries == 1:
                print()
                print('–ì—Ä–µ—à–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä. –ò–º–∞—à —Å–∞–º–æ  –µ–¥–∏–Ω —à–∞–Ω—Å: ')
                total_wrong_tries += 1
            elif tries == 2:
                print()
                print('üòµ')
                print('–ù–µ –ø–æ–∑–Ω–∞!')
                print(f'–í–µ—Ä–Ω–∏—è—Ç –æ—Ç–≥–æ–≤–æ—Ä –µ: {divided} √∑ {divisor} = {correct}')

                total_tasks += 1
                total_wrong += 1

                break

print()
exit_program = input("–ù–∞—Ç–∏—Å–Ω–∏ 'Enter' –∑–∞ –¥–∞ –∑–∞—Ç–≤–æ—Ä–∏—à –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞")